---
- name: Install required system packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    state: present
    update_cache: yes
  become: true

- name: Add Docker GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  args:
    executable: /bin/bash
  become: true
  changed_when: false

- name: Add Docker APT repository (noble)
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu noble stable"
    state: present
    filename: docker
  become: true

- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Install Docker Engine packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes
  register: docker_install_result
  become: true
  retries: 3
  delay: 5
  until: docker_install_result is succeeded

- name: Check if Docker is working (can get version)
  command: docker version --format '{{ .Server.Version }}'
  register: docker_version_check
  ignore_errors: true
  changed_when: false
  become: true

- name: Fail if Docker CLI or daemon is not usable
  fail:
    msg: "‚ùå Docker not working: CLI missing or daemon not running on {{ inventory_hostname }}"
  when: docker_version_check.rc != 0

- name: Start and enable Docker service
  service:
    name: docker
    state: started
    enabled: yes
  become: true
  when: docker_version_check.rc == 0

- name: Pull default Docker image
  community.docker.docker_image:
    name: "{{ default_container_image }}"
    source: pull

- name: Create default containers
  community.docker.docker_container:
    name: "{{ default_container_name }}{{ item }}"
    image: "{{ default_container_image }}"
    command: "{{ default_container_command }}"
    state: present
  loop: "{{ range(1, container_count + 1) | list }}"
