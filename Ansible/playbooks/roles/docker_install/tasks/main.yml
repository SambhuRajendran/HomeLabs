---
- name: Install required system packages
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    state: present
    update_cache: yes
  become: true

- name: Remove any broken/partial Docker install
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: absent
  become: true

- name: Clean up old Docker repo files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/keyrings/docker.asc
    - /usr/share/keyrings/docker-archive-keyring.gpg
  become: true

- name: Check if docker CLI is installed
  shell: command -v docker
  register: docker_exists
  changed_when: false
  ignore_errors: true
  become: true

- name: Debug docker_exists result
  debug:
    var: docker_exists.rc

- name: Install Docker using Docker’s convenience script
  shell: curl -fsSL https://get.docker.com | sh
  args:
    executable: /bin/bash
  register: docker_install_script
  become: true
  when: docker_exists.rc != 0
  changed_when: true

- name: Start and enable Docker service
  service:
    name: docker
    state: started
    enabled: yes
  become: true

- name: Check docker version post-install
  command: docker --version
  register: docker_confirm
  changed_when: false
  ignore_errors: true
  become: true

- name: Fail if docker is still missing
  fail:
    msg: "❌ Docker is still not installed or running on {{ inventory_hostname }}."
  when: docker_confirm.rc != 0

- name: Pull default Docker image
  community.docker.docker_image:
    name: "{{ default_container_image }}"
    source: pull

- name: Create default containers
  community.docker.docker_container:
    name: "{{ default_container_name }}{{ item }}"
    image: "{{ default_container_image }}"
    command: "{{ default_container_command }}"
    state: present
  loop: "{{ range(1, container_count + 1) | list }}"
