---
- name: Install required dependencies
  apt:
    name:
      - curl
      - gnupg
      - ca-certificates
      - lsb-release
    state: present
    update_cache: yes
  become: true

- name: Ensure Docker keyring directory exists
  file:
    path: /usr/share/keyrings
    state: directory
    mode: '0755'
  become: true

- name: Add Docker GPG key (with timeout protection)
  shell: >
    timeout 30 bash -c '
      curl -fsSL https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg |
      gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    '
  args:
    executable: /bin/bash
  register: docker_gpg
  failed_when: docker_gpg.rc != 0
  become: true

- name: Set Docker APT release codename fallback
  set_fact:
    docker_apt_release: >-
      {% if ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'noble' %}
        jammy
      {% elif ansible_distribution == 'Debian' and ansible_distribution_release == 'trixie' %}
        bookworm
      {% else %}
        {{ ansible_distribution_release }}
      {% endif %}

- name: Add Docker APT repository
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ docker_apt_release }} stable"
    state: present
    filename: docker
  become: true

- name: Check if docker command exists
  command: which docker
  register: docker_installed
  ignore_errors: true
  changed_when: false

- name: Force install Docker Engine if not present
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: latest
    update_cache: yes
  become: true
  when: docker_installed.rc != 0

- name: Check if Docker service exists
  stat:
    path: /lib/systemd/system/docker.service
  register: docker_service_file
  become: true

- name: Ensure Docker service is enabled and started
  service:
    name: docker
    state: started
    enabled: yes
  when: docker_service_file.stat.exists
  become: true

- name: Warn if Docker service is missing
  debug:
    msg: "⚠️ Docker service not found. Docker may not have installed properly on {{ inventory_hostname }}"
  when: not docker_service_file.stat.exists
